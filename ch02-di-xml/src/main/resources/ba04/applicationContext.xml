<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--声明Student对象
        简单类型：spring中规定java的基本数据类型和String都是简单类型。
        di给属性赋值
        1.set注入（赋值）：spring调用类的set方法，你可以在set方法中完成属性的赋值
            1）简单类型的set注入：（eg1）
            2）构造方法注入：
                spring调用类有参数构造方法，在创建对象的同事，在构造方法中给属性赋值（constructor-arg）
                <constructor-arg> 标签：一个<constructor-arg>表示构造方法的一个参数
                有多少个参数这个标签就出现多少次
                这个标签参数的属性：
                    name：表示构造方法的形参名
                    index：表示构造方法的参数位置，参数从左往右位置是0,1,2的顺序
                    ref：构造方法的形参是引用类型的
    -->
    <!--使用name属性实现构造注入-->
    <!--
        引用类型的自动注入：
            spring框架根据某些规则可以给引用类型赋值（byName、byType）
            1.byName注入：
                java类中引用类型的属性名和spring容器中<bean>的id名称一样
                且数据类型是一致的，这样的容器中的bean，spring能够赋值给引用类型。
              语法：
              <bean id="xx" class="yyy" autowire="byName">
                简单类型的赋值
              </bean>
             2.byType注入：
                java中引用类型的数据类型和spring容器中<bean>的class属性是同源关系的，
                这样的bean能够赋值给引用类型
               同源就是一类的意思：
                1。java类中引用类型的数据类型和bean的class的值是一样的。
                2.java类中引用类型的数据类型和bean的class是父子关系的。
                3.java类中引用类型和bean的class的值是接口和实现类的关系

    -->
    <bean id="student" class="com.dlkyy.ba04.Student" autowire="byName">
        <property name="name" value="dlk"/>
        <property name="age" value="16"/>
        <!--<constructor-arg name="school" ref="myXueXiao"/>-->
    </bean>
    <bean id="school" class="com.dlkyy.ba04.School">
        <property name="name" value="bjpowernode"/>
        <property name="address" value="cq"/>
    </bean>
</beans>