动态代理：可以在程序执行过程中，创建代理对象。
通过代理对象执行方法，给目标类的方法增加额外的功能（功能增强）

实现步骤：
    1.创建目标类，SomeServiceImpl类，给它doSome，doOther增加 输出时间、事务。
    2.创建InvocationHandler接口实现类，在这个类实现给目标方法增加功能
    3.使用jdk中的Proxy，创建代理对象。实现创建对象的能力。


OOP:面向切面编程
   如何理解面向切面编程：
    1）需要在分析项目功能时，找出切面。
    2）合理的安排切面的执行时间（在哪个方法前，还是在目标方法后）
    3）合理的安排切面的执行位置，在哪个类，哪个方法增加增强功能
   术语：
    1）Aspect：切面，表示增强的功能，就是一堆代码，完成某一个功能。非业务功能，
                常见的切面功能有日志、事务、统计信息，参数检查，权限验证。
    2）JointPoint：连接点，连接业务方法和切面的位置。就某类中的业务方法。
    3）Pointcut：切入点，指多个连接点方法的集合，多个方法
    4）目标对象：给那个类的方法增加功能。
    5）Advice：通知，通知表示切面功能执行的时间。

    一个切面有三个关键的要素：
        1）切面的功能代码，切面干什么
        2）切面的执行位置，使用Pointcut表示切面执行的位置
        3）切面的执行时间，使用Advice表示时间，在目标方法之前，还是目标方法之后